version: "3"


#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing
#  OUT_DIR: "/Users/dev/Documents/iSpace/better-go/matrix/app/try/volo-example"


# env file:
#dotenv:
#  - .env

################################################################################################

tasks:

  run:
    cmds:
      - go run main.go

  # ref: https://go-zero.dev/cn/docs/goctl/installation/
  install:
    cmds:
      - GOPROXY=https://goproxy.cn/,direct go install github.com/zeromicro/go-zero/tools/goctl@latest
      - goctl -v
      - goctl env check -i -f --verbose

  run:api:
    cmds:
      - |
        cd api; go run api.go -f etc/api-api.yaml

  run:rpc:
    cmds:
      - |
        cd rpc/; go run main.go -f etc/main.yaml

  new:api:
    cmds:
      - goctl api new api

  new:api:docker:
    - cd hello; goctl docker -go hello.go

  new:rpc:
    cmds:
      - goctl rpc new inner

  build:docker:api:
    cmds:
      - docker build -t hello:v1 -f hello/Dockerfile .

  # 更改proto文件， 可以方便生成业务框架代码
  gen:pb:
    cmds:
      # - cd hello_rpc/; goctl rpc protoc rpc.proto --go_out=./pb --go-grpc_out=./pb --zrpc_out=.
      - cd rpc/; goctl rpc protoc main.proto --go_out=. --go-grpc_out=. --zrpc_out=.

  tidy:
    cmds:
      - go mod tidy -v

  api:test:
    cmds:
      - curl -i -X GET http://localhost:8888/from/you
      - open http://localhost:8888/from/you

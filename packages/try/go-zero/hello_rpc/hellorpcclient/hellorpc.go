// Code generated by goctl. DO NOT EDIT!
// Source: hello_rpc.proto

package hellorpcclient

import (
	"context"

	"zero/hello_rpc/hello_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = hello_rpc.Request
	Response = hello_rpc.Response

	HelloRpc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultHelloRpc struct {
		cli zrpc.Client
	}
)

func NewHelloRpc(cli zrpc.Client) HelloRpc {
	return &defaultHelloRpc{
		cli: cli,
	}
}

func (m *defaultHelloRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := hello_rpc.NewHelloRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
